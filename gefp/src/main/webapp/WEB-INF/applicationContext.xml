<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:security="http://www.springframework.org/schema/security"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security-3.2.xsd">

    <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
        <property name="driverClassName" value="org.postgresql.Driver" />
        <property name="url" value="jdbc:postgresql://localhost:5432/gefp" />
        <property name="username" value="gefp" />
        <property name="password" value="abcd" />
        <property name="initialSize" value="1" />
    </bean>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceUnitName" value="gefp" />
        <property name="dataSource" ref="dataSource" />
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

    <context:annotation-config />

    <tx:annotation-driven />

    <context:component-scan base-package="gefp" />
	
	<security:authentication-manager>
        <security:authentication-provider>
            <security:jdbc-user-service data-source-ref="dataSource" />
        </security:authentication-provider>
    </security:authentication-manager>

    <security:http auto-config="true" use-expressions="true">
    	<security:form-login login-page="/login.html"
            authentication-success-handler-ref="authenticationSuccessHandler"
            authentication-failure-url="/401.html" />
        <security:logout success-handler-ref="logoutRedirectHandler" />
        <security:intercept-url pattern="/advisor/**" access="authenticated and hasRole('ROLE_ADVISOR')" />
        <security:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />
        <security:intercept-url pattern="/studentView.html" access="hasRole('ROLE_ADVISOR') or hasRole('ROLE_STUDENT')	" />
        <security:intercept-url pattern="/saveCheckpoint.html" access="hasRole('ROLE_ADVISOR') or hasRole('ROLE_STUDENT')" />
        <security:intercept-url pattern="/editProfile.html" access="principal.username == #user.username and hasRole('ROLE_STUDENT')" />
        <security:intercept-url pattern="/changeProfile.html" access="principal.username == #user.username and hasRole('ROLE_STUDENT')" />
        <security:intercept-url pattern="/changeProfile.html" access="principal.username == #user.username and hasRole('ROLE_STUDENT')" />
        <security:intercept-url pattern="/editProfile.html" access="hasRole('ROLE_STUDENT')" />
        <security:intercept-url pattern="/changePassword.html" access="hasRole('ROLE_STUDENT')" />
        <security:intercept-url pattern="/department.html" access="authenticated" />
        <security:intercept-url pattern="/plan.html" access="authenticated" />
        <security:intercept-url pattern="/homepage.html" access="hasRole('ROLE_ADMIN') or hasRole('ROLE_ADVISOR')" />
        <security:access-denied-handler error-page="/403.html"/>
        <!-- <security:intercept-url pattern="/login.html" access="hasRole('ROLE_ADMIN')" /> -->
    </security:http>
    
      <security:authentication-manager>
        <security:authentication-provider user-service-ref="userService"/>
       
    </security:authentication-manager>
    
    <security:global-method-security pre-post-annotations="enabled" />
    
</beans>